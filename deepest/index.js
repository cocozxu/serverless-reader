const querystring = require('querystring');
const CosmosClient = require("@azure/cosmos").CosmosClient;

const config = {
Â  Â  endpoint: "https://cosmo.documents.azure.com:443/",
Â  Â  key: "jQwHkrsqhSG1Jo1U5dPyPrXP1WmY2DevgYV33jz06locXIj3vhxFQ3b4dJ2vAZgYkXmEnvvPEXxMd5Jgmsoemg==",
Â  Â  databaseId: "SecretStorer",
Â  Â  containerId: "secrets",
Â  Â  partitionKey: {kind: "Hash", paths: ["/secrets"]}
Â  Â  };

module.exports = async function (context, req) {
Â  Â  context.log('JavaScript HTTP trigger function processed a request.');

Â  Â  const queryObject = querystring.parse(req.body);
Â  Â  let message = queryObject.Body;
Â  Â  let document = { "message": message }
Â  Â  let items = await createDocument(document)

Â  Â  const responseMessage = `Thanks ðŸ˜Š! Stored your secret "${message}". ðŸ˜¯ Someone confessed that: ${JSON.stringify(items[0].message)}`;

Â  Â  context.res = {
Â  Â  Â  Â  body: responseMessage
Â  Â  };
}

async function create(client) {
Â  Â  const { database } = await client.databases.createIfNotExists({
Â  Â  Â  Â  id: config.databaseId
Â  Â  });

Â  Â  const { container } = await client
Â  Â  Â  Â  .database(config.databaseId)
Â  Â  Â  Â  .containers.createIfNotExists(
Â  Â  Â  Â  Â  Â  { id: config.containerId, key: config.partitionKey },
Â  Â  Â  Â  Â  Â  { offerThroughput: 400 }
Â  Â  Â  Â  );
}

async function createDocument(newItem) {
Â  Â  var { endpoint, key, databaseId, containerId } = config;
Â  Â  const client = new CosmosClient({endpoint, key});
Â  Â  const database = client.database(databaseId);
Â  Â  const container = database.container(containerId);
Â  Â  await create(client, databaseId, containerId);
Â  Â Â 
Â  Â  const querySpec = {
Â  Â  query: "SELECT top 1 * FROM c order by c._ts desc"
Â  Â  };

Â  Â  const { resources: items } = await container.items.query(querySpec).fetchAll();
Â  Â  const {resource: createdItem} = await container.items.create(newItem);
Â  Â Â 
Â  Â  return items;
}
